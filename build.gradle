plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com" }
    maven { url "https://maven.bai.lol" }

    maven {
        allowInsecureProtocol = true
        url 'http://maven.darktree.net'
    }

    mavenLocal()
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/stylish_occult.accesswidener")
    runtimeOnlyLog4j = true
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Mod Menu
    compileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Interference API
    modImplementation "net.darktree:interference:${project.interference_version}"
    include "net.darktree:interference:${project.interference_version}"

    // What the hell is that?
    modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${wthit_version}"
    modImplementation "mcp.mobius.waila:wthit:fabric-${wthit_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
